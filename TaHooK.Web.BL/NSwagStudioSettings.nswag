{
  "x-generator": "NSwag v13.20.0.0 (NJsonSchema v10.9.0.0 (Newtonsoft.Json v13.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "TaHooK API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://localhost:7273"
    }
  ],
  "paths": {
    "/api/answers": {
      "get": {
        "tags": [
          "Answer"
        ],
        "summary": "GetAnswers",
        "description": "Returns a list of all answers.",
        "operationId": "Answer_GetAnswers",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AnswerListModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Answer"
        ],
        "summary": "CreateAnswer",
        "description": "Creates a new answer.",
        "operationId": "Answer_CreateAnswer",
        "requestBody": {
          "x-name": "answer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerCreateUpdateModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/answers/{id}": {
      "get": {
        "tags": [
          "Answer"
        ],
        "summary": "GetAnswerById",
        "description": "Returns an answer based on the GUID on input.",
        "operationId": "Answer_GetAnswerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AnswerDetailModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Answer"
        ],
        "summary": "UpdateAnswerById",
        "description": "Updates an existing answer.",
        "operationId": "Answer_UpdateAnswerById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "answer",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnswerCreateUpdateModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Answer"
        ],
        "summary": "DeleteAnswer",
        "description": "Deletes an answer based on the input ID.",
        "operationId": "Answer_DeleteAnswer",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/questions": {
      "get": {
        "tags": [
          "Question"
        ],
        "summary": "GetQuestions",
        "description": "Returns a list of all questions.",
        "operationId": "Question_GetQuestions",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuestionListModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Question"
        ],
        "summary": "CreateQuestion",
        "description": "Creates a new question.",
        "operationId": "Question_CreateQuestion",
        "requestBody": {
          "x-name": "question",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionCreateUpdateModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/questions/{id}": {
      "get": {
        "tags": [
          "Question"
        ],
        "summary": "GetQuestionById",
        "description": "Returns a question based on the GUID on input.",
        "operationId": "Question_GetQuestionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuestionDetailModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Question"
        ],
        "summary": "UpdateQuestionById",
        "description": "Updates an existing question.",
        "operationId": "Question_UpdateQuestionById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "question",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuestionCreateUpdateModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Question"
        ],
        "summary": "DeleteQuestion",
        "description": "Deletes a question based on the input ID.",
        "operationId": "Question_DeleteQuestion",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/quizzes": {
      "get": {
        "tags": [
          "Quiz"
        ],
        "summary": "GetQuizzes",
        "description": "Returns a list of all quizzes.",
        "operationId": "Quiz_GetQuizzes",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuizListModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Quiz"
        ],
        "summary": "CreateQuiz",
        "description": "Creates a new quiz.",
        "operationId": "Quiz_CreateQuiz",
        "requestBody": {
          "x-name": "quiz",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuizCreateUpdateModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/quizzes/{id}": {
      "get": {
        "tags": [
          "Quiz"
        ],
        "summary": "GetQuizById",
        "description": "Returns a quiz based on the GUID on input.",
        "operationId": "Quiz_GetQuizById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizDetailModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Quiz"
        ],
        "summary": "UpdateQuizById",
        "description": "Updates an existing quiz.",
        "operationId": "Quiz_UpdateQuizById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "quiz",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuizCreateUpdateModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Quiz"
        ],
        "summary": "DeleteQuiz",
        "description": "Deletes a quiz based on the input ID.",
        "operationId": "Quiz_DeleteQuiz",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/templates": {
      "get": {
        "tags": [
          "QuizTemplate"
        ],
        "summary": "GetQuizTemplates",
        "description": "Returns a list of all quiz templates.",
        "operationId": "QuizTemplate_GetQuizTemplates",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QuizTemplateListModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "QuizTemplate"
        ],
        "summary": "CreateQuizTemplate",
        "description": "Creates a new quiz template.",
        "operationId": "QuizTemplate_CreateQuizTemplate",
        "requestBody": {
          "x-name": "quiz",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuizTemplateCreateUpdateModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/templates/{id}": {
      "get": {
        "tags": [
          "QuizTemplate"
        ],
        "summary": "GetQuizTemplateById",
        "description": "Returns a quiz template based on the GUID on input.",
        "operationId": "QuizTemplate_GetQuizTemplateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QuizTemplateDetailModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "QuizTemplate"
        ],
        "summary": "UpdateQuizTemplateById",
        "description": "Updates an existing quiz template.",
        "operationId": "QuizTemplate_UpdateQuizTemplateById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "quiz",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QuizTemplateCreateUpdateModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "QuizTemplate"
        ],
        "summary": "DeleteQuizTemplate",
        "description": "Deletes a quiz template based on the input ID.",
        "operationId": "QuizTemplate_DeleteQuizTemplate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/scores": {
      "get": {
        "tags": [
          "Score"
        ],
        "summary": "GetScores",
        "description": "Returns a list of all the scores.",
        "operationId": "Score_GetScores",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ScoreListModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Score"
        ],
        "summary": "CreateScore",
        "description": "Creates a new score.",
        "operationId": "Score_CreateScore",
        "requestBody": {
          "x-name": "score",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoreCreateUpdateModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/scores/{id}": {
      "get": {
        "tags": [
          "Score"
        ],
        "summary": "GetScoreById",
        "description": "Returns a score based on the GUID on input.",
        "operationId": "Score_GetScoreById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScoreDetailModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Score"
        ],
        "summary": "UpdateScoreById",
        "description": "Updates an existing score.",
        "operationId": "Score_UpdateScoreById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "score",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ScoreCreateUpdateModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Score"
        ],
        "summary": "DeleteScore",
        "description": "Deletes a score based on the input ID.",
        "operationId": "Score_DeleteScore",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/search": {
      "get": {
        "tags": [
          "Search"
        ],
        "summary": "GetSearch",
        "description": "Returns a list of found entities based on the searched query.",
        "operationId": "Search_GetSearch",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "x-position": 1
          },
          {
            "name": "p",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 2
          },
          {
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            },
            "x-position": 3
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchListModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "GetUsers",
        "description": "Returns a list of all users.",
        "operationId": "User_GetUsers",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserListModel"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "summary": "CreateUser",
        "description": "Creates a new user.",
        "operationId": "User_CreateUser",
        "requestBody": {
          "x-name": "user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateUpdateModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              }
            }
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "GetUserById",
        "description": "Returns a user based on the GUID on input.",
        "operationId": "User_GetUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UserDetailModel"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "summary": "UpdateUserById",
        "description": "Updates an existing user.",
        "operationId": "User_UpdateUserById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 2
          }
        ],
        "requestBody": {
          "x-name": "user",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UserCreateUpdateModel"
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdModel"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "summary": "DeleteUser",
        "description": "Deletes a user based on the input ID.",
        "operationId": "User_DeleteUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid"
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AnswerListModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AnswerType"
          },
          "text": {
            "type": "string"
          },
          "picture": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "isCorrect": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "AnswerType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Text",
          "Number",
          "Picture",
          "YesNo"
        ],
        "enum": [
          0,
          1,
          2,
          3
        ]
      },
      "AnswerDetailModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AnswerType"
          },
          "text": {
            "type": "string"
          },
          "picture": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "isCorrect": {
            "type": "boolean"
          },
          "questionId": {
            "type": "string",
            "format": "guid"
          },
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "IdModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "AnswerCreateUpdateModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/AnswerType"
          },
          "text": {
            "type": "string"
          },
          "picture": {
            "type": "string",
            "format": "uri",
            "nullable": true
          },
          "isCorrect": {
            "type": "boolean"
          },
          "questionId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "QuestionListModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "text": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "QuestionDetailModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "text": {
            "type": "string"
          },
          "answers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/AnswerListModel"
            }
          },
          "quizTemplateId": {
            "type": "string",
            "format": "guid"
          },
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "QuestionCreateUpdateModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "text": {
            "type": "string"
          },
          "quizTemplateId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "QuizListModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "finished": {
            "type": "boolean"
          },
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "QuizDetailModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "finished": {
            "type": "boolean"
          },
          "templateId": {
            "type": "string",
            "format": "guid"
          },
          "scores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScoreListModel"
            }
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionListModel"
            }
          },
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ScoreListModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "quizId": {
            "type": "string",
            "format": "guid"
          },
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "QuizCreateUpdateModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string"
          },
          "startedAt": {
            "type": "string",
            "format": "date-time"
          },
          "finished": {
            "type": "boolean"
          },
          "templateId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "QuizTemplateListModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "QuizTemplateDetailModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string"
          },
          "questions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/QuestionListModel"
            }
          },
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "QuizTemplateCreateUpdateModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "title": {
            "type": "string"
          }
        }
      },
      "ScoreDetailModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "quizId": {
            "type": "string",
            "format": "guid"
          },
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "ScoreCreateUpdateModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "score": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "string",
            "format": "guid"
          },
          "quizId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SearchListModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "page": {
            "type": "integer",
            "format": "int32"
          },
          "totalPages": {
            "type": "integer",
            "format": "int32"
          },
          "totalItems": {
            "type": "integer",
            "format": "int32"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SearchListItemModel"
            }
          }
        }
      },
      "SearchListItemModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/SearchEntityType"
          },
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "SearchEntityType": {
        "type": "integer",
        "description": "",
        "x-enumNames": [
          "Question",
          "Answer",
          "User"
        ],
        "enum": [
          0,
          1,
          2
        ]
      },
      "UserListModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "photo": {
            "type": "string",
            "format": "uri"
          },
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "UserDetailModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "photo": {
            "type": "string",
            "format": "uri"
          },
          "scores": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ScoreListModel"
            }
          },
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "UserCreateUpdateModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "photo": {
            "type": "string",
            "format": "uri"
          }
        }
      }
    }
  }
}